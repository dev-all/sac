@model SAC.Models.FacturaPagoViewModel
@{
    ViewBag.Title = "Pagar Factura";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

 

<div class="row">
    <div class="col-xlg-12 col-lg-12 col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row m-b-40">
                    <div class="col-md-12">
                        <h5 class="card-title">Proveedor:  @Html.Raw(Model.Proveedor.Nombre.ToUpper()) </h5>
                        @using (Html.BeginForm("FacturaPago", "CuentaCteProveedor", FormMethod.Post, new { @id = "frmPagar" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Proveedor.Id)


                            <div class="table-responsive">
                                <table id="TblFacturas" class="table stylish-table">
                                    <thead>
                                        <tr>
                                            <th> </th>
                                            <th> Codigo</th>
                                            <th> Fecha</th>
                                            <th> Pto Venta</th>
                                            <th> Numero</th>
                                            <th class="text-center"> Total</th>
                                            <th class="text-center"> Saldo</th>
                                            <th> Moneda</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ListaFacturas)
                                        {
                                            <tr>
                                                <td class="text-center"><input type="checkbox" class="check" id=@item.Id value=@item.Saldo></td>
                                                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                                                <td>@Html.DisplayFor(modelItem => item.PuntoVenta)</td>
                                                <td>@Html.DisplayFor(modelItem => item.NumeroFactura)</td>
                                                <td class="text-right">@Html.DisplayFor(modelItem => item.Total)</td>
                                                <td class="text-right">@Html.DisplayFor(modelItem => item.Saldo)</td>
                                                <td class="text-center">@Html.DisplayFor(modelItem => item.TipoMoneda.Descripcion)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <h4>Medios de pago</h4>

                            @Html.Hidden("idFacturas")
                            @Html.Hidden("idChequesPropios")
                            @Html.Hidden("idChequesTerceros")
                            @Html.Hidden("idCuentasBancarias")
                            @Html.Hidden("idTarjeta")

                            <div class="row  justify-content-md-center">
                                @* efectivo *@
                                <div class="row col-md-12  m-t-10">
                                    <div class="col-md-6 text-right"></div>
                                    <div class="col-md-6 text-center">
                                        <div class="row ">
                                            <div class="col-6  text-right"><label class="">Total de Saldos</label></div>
                                            <div class="col-6">@Html.TextBox("TotalSaldo", Model.ListaFacturas.Sum(x => x.Saldo).ToString(), new { @class = "form-control form-control-sm", @readOnly = true })</div>
                                        </div>
                                    </div>
                                </div>

                                @* efectivo *@
                                <div class="row col-md-12  m-t-10">
                                    <div class="col-md-6 text-right"></div>
                                    <div class="col-md-6 text-center">
                                        <div class="row ">
                                            <div class="col-6  text-right">
                                                @Html.LabelFor(m => m.TotalAPagar, new { @class = "control-label form-control-sm" })
                                            </div>
                                            <div class="col-6">
                                                @Html.TextBoxFor(m => m.TotalAPagar, new { @class = "form-control form-control-sm", @placeholder = "", @readonly = true })
                                                @Html.ValidationMessageFor(m => m.TotalAPagar, "", new { @class = "text-danger form-control-sm" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @* efectivo *@
                                <div class="row col-md-12  m-t-10">
                                    <div class="col-md-6 text-right"></div>
                                    <div class="col-md-6 text-center">
                                        <div class="row ">
                                            <div class="col-6  text-right">
                                                @Html.LabelFor(p => p.efectivo, new { @class = "control-label form-control-sm" })
                                            </div>
                                            <div class="col-6">

                                                @*@Html.EditorFor(p => p.efectivo, new { htmlAttributes = new { @type = "number", @min = "1", @class = "form-control form-control-sm",  @id = "efectivo" } })
                                                    @Html.ValidationMessage("efectivo", new { @class = "text-danger" })*@
                                                @Html.TextBoxFor(m => m.efectivo, new { @class = "form-control form-control-sm", @placeholder = "" })
                                                @Html.ValidationMessageFor(m => m.efectivo, "", new { @class = "text-danger form-control-sm" })

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <br />
                                @* cheque *@
                                <div class="row col-md-12 m-t-10">
                                    <div class="col-md-6 text-right">
                                        <input type="button" class="btn btn-secondary" id="btnSelCheque" onclick="fnVerModalCheques();" value="Cheque" disabled>
                                    </div>
                                    <div class="col-md-6 text-center">
                                        <div class="row">
                                            <div class="col-md-6  text-right">
                                                @Html.LabelFor(p => p.montoChequesSeleccionados, new { @class = "control-label form-control-sm" })
                                            </div>
                                            <div class="col-md-6">
                                                @Html.EditorFor(p => p.montoChequesSeleccionados, new { htmlAttributes = new { @class = "form-control form-control-sm", @readOnly = true } })
                                                @Html.ValidationMessage("montoChequesSeleccionados", new { @class = "text-danger form-control-sm" })
                                                @*<input type="text" class="form-control" id="montoChequesSeleccionados" placeholder="Sin valor" readonly="readonly">*@
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <br />
                                @* tranferencia *@
                                <div class="row col-md-12 m-t-10">
                                    <div class="col-md-6 text-right">
                                        <input type="button" class="btn btn-secondary" id="btnSelTransferencia" onclick="fnVerModalTranferencia();" value="Transferencia" disabled>
                                    </div>
                                    <div class="col-md-6 text-center">
                                        <div class="row">
                                            <div class="col-md-6  text-right">
                                                @Html.LabelFor(p => p.montoTranferencia, new { @class = "control-label form-control-sm" })
                                            </div>
                                            <div class="col-md-6">
                                                @Html.EditorFor(p => p.montoTranferencia, new { htmlAttributes = new { @class = "form-control form-control-sm", @readOnly = true } })
                                                @Html.ValidationMessage("montoTranferencia", new { @class = "text-danger form-control-sm" })
                                                @*<input type="text" class="form-control" id="montoTranferenciaSeleccionados" placeholder="Sin valor" readonly="readonly">*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                @* tarjeta *@
                                <div class="row col-md-12 m-t-10">
                                    <div class="col-md-6 text-right">
                                        <input type="button" class="btn btn-secondary" id="btnSelTarjeta" onclick="fnVerModalTarjetas();" value="Tarjeta" disabled>
                                    </div>
                                    <div class="col-md-6 text-center">
                                        <div class="row">
                                            <div class="col-md-6  text-right">@Html.LabelFor(p => p.montoTarjetaSeleccionados, new { @class = "control-label form-control-sm" })</div>
                                            <div class="col-md-6">
                                                @Html.EditorFor(p => p.montoTarjetaSeleccionados, new { htmlAttributes = new { @class = "form-control form-control-sm", @readOnly = true } })
                                                @Html.ValidationMessage("montoTarjetaSeleccionados", new { @class = "text-danger form-control-sm" })

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @* diferencia *@
                                <div class="row col-md-12 m-t-10">
                                    <div class="col-md-6 text-right">
                                    </div>
                                    <div class="col-md-6 text-center">
                                        <div class="row">
                                            <div class="col-md-6  text-right">
                                                @Html.LabelFor(p => p.Diferencia, new { @class = "control-label form-control-sm" })
                                            </div>
                                            <div class="col-md-6">
                                                @Html.EditorFor(p => p.Diferencia, new { htmlAttributes = new { @class = "form-control form-control-sm", @readOnly = true } })
                                                @Html.ValidationMessage("Diferencia", new { @class = "text-danger form-control-sm" })
                                                @*<input type="text" class="form-control" id="Diferencia" placeholder="Sin valor"  readonly="readonly">*@
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                @* diferencia *@
                                <div class="row col-md-12 m-t-10">
                                    <div class="col-md-6 text-right">
                                    </div>
                                    <div class="col-md-6 text-center">
                                        <div class="row">
                                            <div class="col-md-6  text-right">
                                                @Html.Label("Seleccione Presupuesto", new { @class = "control-label form-control-sm" })
                                            </div>
                                            <div class="col-md-6">
                                                @Html.DropDownList("idPresupuesto", Model.ListaPresupuestoActual, null, new { @class = "form-control form-control-sm" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-12 text-right ">
                                    <button type="submit" id="btnConfirmar" class="btn btn-success">Confirmar Pago</button>
                                </div>
                            </div>


                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalCheques" tabindex="-1"  role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Cheques</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">×</button>
            </div>

            <div class="modal-body">
                <ul class="nav nav-tabs mb-3">
                    <li class="nav-item">
                        <a href="#Propios" data-toggle="tab" aria-expanded="false" class="nav-link active tabPropios">
                            <i class="mdi mdi-home-variant d-lg-none d-block mr-1"></i>
                            <span class="d-none d-lg-block">Propios</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#Terceros" data-toggle="tab" aria-expanded="true" class="nav-link tabTerceros">
                            <i class="mdi mdi-account-circle d-lg-none d-block mr-1"></i>
                            <span class="d-none d-lg-block">Terceros</span>
                        </a>
                    </li>

                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="Propios">
                        @Html.Partial("_TablaChequesPropios", Model);
                    </div>
                    <div class="tab-pane show" id="Terceros">
                        @Html.Partial("_tablaChequesTerceros", Model);
                    </div>
                </div>
            </div>
            <div class="modal-footer text-right">
                <div style="padding:1em;">
                    <button type="button" class="btn btn-success btn-sm" onclick="fnAsignarCheque()">Asignar Cheques</button>
                </div>
            </div>

        </div>



    </div>
</div>


<div class="modal fade bd-example-modal-lg" id="ModalTranferencia" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Seleccione Cuenta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div id="Resultados1"></div>
            </div>

            <div class="modal-footer text-right">
                <div style="padding:1em;">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-success" onclick="fnAsignarCuentaBancaria()">Asignar</button>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="ModalTarjetas" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Seleccione Tarjeta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div id="Resultados2"></div>
            </div>

            <div class="modal-footer text-right">
                <div style="padding:1em;">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-success" onclick="fnAsignarTarjeta()">Asignar</button>
                </div>
            </div>

        </div>
    </div>
</div>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Date Picker Plugin JavaScript -->
    <script src="/Content/assets/plugins/bootstrap-datepicker/bootstrap-datepicker.js"></script>

    <!-- This is data table -->
    <script src="/Content/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <!-- start - This is for export functionality only -->
    <script src="~/Content/assets/plugins/datatables/jsTable/dataTables.buttons.min.js"></script>
    <script src="~/Content/assets/plugins/datatables/jsTable/buttons.flash.min.js"></script>
    <script src="~/Content/assets/plugins/datatables/jsTable/jszip.min.js"></script>
    <script src="~/Content/assets/plugins/datatables/jsTable/pdfmake.min.js"></script>
    <script src="~/Content/assets/plugins/datatables/jsTable/vfs_fonts.js"></script>
    <script src="~/Content/assets/plugins/datatables/jsTable/buttons.html5.min.js"></script>
    <script src="~/Content/assets/plugins/datatables/jsTable/buttons.print.min.js"></script>


    <script>

        function fnVerModalCheques() {

            $("#montoChequesSeleccionados").val("0");
            $("#montoChequesSeleccionados").val("0");
            /// verificar si se quedan seleccionado los cheques de lo contrario habria que limpiar el hiden de ID
            // fntablaChequesPropios();
            // fntablaChequesTerceros();
            $("#ModalCheques").modal('show');
        }

        function fnAsignarCheque() {

            var total = 0;
            //cheques propios
            $('.checkChequePropio:checked').each(function () {
                valor = parseFloat($(this)[0].value);
                if (total == 0) {
                    total = valor
                }
                else {
                    total += valor;
                }
                $("#idChequesPropios").val($(this)[0].id);
            });

            //cheques terceros
            $('.checkChequeTercero:checked').each(function () {
                valor = parseFloat($(this)[0].value);
                if (total == 0) {
                    total = valor
                }
                else {
                    total += valor;
                }
                $("#idChequesTerceros").val($(this)[0].id);
            });

            $("#montoChequesSeleccionados").val(total.toFixed(2));
            $("#ModalCheques").modal('hide');
            fnCalcularDirefencia();

        }

        function fnVerModalTarjetas() {
            $.ajax({
                type: "POST",
                url: "/CuentaCteProveedor/CargarTarjetas",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                beforeSend: function () {
                }, complete: function () {
                },
                success: function (response) {
                    $('#Resultados2').html(response);
                    $("#ModalTarjetas").modal('show');
                    $("#montoTarjetaSeleccionados").val('');
                },
                failure: function (response) {
                    Console.log(response.responseText);
                },
                error: function (response) {
                    Console.log(response.responseText);
                }
            });
        }

        function fnAsignarTarjeta() {
            $("#idTarjeta").val($("#idTarjetasdrop").val());
            $("#montoTarjetaSeleccionados").val(parseFloat($("#MontoTarjeta").val()).toFixed(2));
            $("#ModalTarjetas").modal('hide');

            //console.log($("#idTarjeta").val());

            fnCalcularDirefencia()
        }

        function fnCalcularDirefencia() {
            var TotalaPagar = isNaN($("#TotalAPagar").val()) ? 0 : parseFloat($("#TotalAPagar").val());
            var Efectivo = isNaN(parseFloat($("#efectivo").val())) ? 0 : parseFloat($("#efectivo").val());
            var Cheque = isNaN(parseFloat($("#montoChequesSeleccionados").val())) ? 0 : parseFloat($("#montoChequesSeleccionados").val());
            var tranferencia = isNaN(parseFloat($("#montoTranferenciaSeleccionados").val())) ? 0 : parseFloat($("#montoTranferenciaSeleccionados").val());
            var tarjeta = isNaN(parseFloat($("#montoTarjetaSeleccionados").val())) ? 0 : parseFloat($("#montoTarjetaSeleccionados").val());

            var resultado = TotalaPagar - (Efectivo + Cheque + tranferencia + tarjeta);

            $("#Diferencia").val(parseFloat(resultado));

        }

        $("#efectivo").keyup(function () {
            fnCalcularDirefencia()
        });


        function fnVerModalTranferencia() {
            $("#montoTranferenciaSeleccionados").val("");
            $("#idCuentasBancarias").val("");

            $.ajax({
                type: "POST",
                url: "/CuentaCteProveedor/CargarCuentas",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                beforeSend: function () {
                }, complete: function () {
                },
                success: function (response) {
                    $('#Resultados1').html(response);
                    $("#ModalTranferencia").modal('show');
                },
                failure: function (response) {
                    Console.log(response.responseText);
                },
                error: function (response) {
                    Console.log(response.responseText);
                }
            });
        }

        function fnAsignarCuentaBancaria() {
            $("#montoTranferencia").val(parseFloat($("#MontoCuenta").val()).toFixed(2));
            $("#idCuentasBancarias").val($("#idCuentaBancaria").val());
            $("#ModalTranferencia").modal('hide');
            fnCalcularDirefencia();
        }

        //maneja los check
        $(".check").on("click", function () {


            $("#btnSelCheque").removeAttr("disabled");
            $("#btnSelTransferencia").removeAttr("disabled");
            $("#btnSelTarjeta").removeAttr("disabled");


            var total = 0;
            var valortotalSincoma = $("#TotalAPagar").val().replace(",", ".");
            var idFacturas = $("#idFacturas").val();
            if (idFacturas.length == 1) {
                $("#idFacturas").val("");
            }
            var valor = 0;

            if ($(this).is(":checked")) {
                var valorSincoma = "";
                valorSincoma = this.value.replace(",", ".");
                valor = parseFloat(valorSincoma);

                if ((valortotalSincoma != "")) {

                    if (isNaN(valortotalSincoma)) {
                        valortotalSincoma = 0;
                    }
                    total = parseFloat(valortotalSincoma);
                    total = total + valor;
                    $("#TotalAPagar").val(total.toFixed(2));
                    // $("#TotalAPagar").val(total);
                    if (valortotalSincoma == 0) {
                        idFacturas = this.id;
                    }
                    else {
                        idFacturas = idFacturas + ";" + this.id;
                    }
                }
                else {
                    $("#TotalAPagar").val(valor.toFixed(2));
                    //$("#TotalAPagar").val(valor);
                    idFacturas = this.id;
                }

                //agrego de la lista de facturas a pagar el registro seleccionado
                $("#idFacturas").val(idFacturas);
            }
            else {
                valorSincoma = this.value.replace(",", ".");
                valor = parseFloat(valorSincoma);
                var arr = idFacturas;
                var arrayDeCadenas = arr.split(";");

                if (valortotalSincoma != "0") {
                    total = parseFloat(valortotalSincoma);
                    total -= valor;
                    if (isNaN(total) || total == 0) {
                        $("#TotalAPagar").val("0");
                        console.log("0", arrayDeCadenas);
                        removeItemFromArr(arrayDeCadenas, this.id);
                        $("#btnSelCheque").attr('disabled', 'disabled');
                        $("#btnSelTransferencia").attr('disabled', 'disabled');
                        $("#btnSelTarjeta").attr('disabled', 'disabled');

                    }
                    else {
                        $("#TotalAPagar").val(total.toFixed(2));
                        console.log("1", arrayDeCadenas);
                        removeItemFromArr(arrayDeCadenas, this.id);
                    }
                    $("#idFacturas").val(arrayDeCadenas.join(';'));
                }
                else {
                    $("#TotalAPagar").val(this.value);
                }
                //quito de la lista de facturas a pagar el registro eliminado
                //$.get("/CuentaCteProveedor/QuitarFacturaAPagar/?idFactura=" + this.id, function (data) {
                //    if (data == "0") {
                //        alert("Error, algo no salio bien");
                //    }
                //});
            }

            console.log($("#idFacturas").val());
        });

        //elimina elemento de array por elemento
        function removeItemFromArr(arr, item) {
            var i = arr.indexOf(item);
            arr.splice(i, 1);
        }

        function fntablaChequesPropios() {
            if ($.fn.dataTable.isDataTable('#TblChequesPropios')) {
                table = $('#TblChequesPropios').DataTable();
                table.destroy();
            }

            $('#TblChequesPropios').DataTable({
                "language": { "url": "../Content/assets/plugins/datatables/es.txt" },
                "order": [[4, 'asc']],
                'paging': false,
                'lengthChange': false,
                'searching': true,
                'ordering': false,
                'info': false,
                'autoWidth': true,
                'scrollY': '230px',
                'scrollCollapse': true
            });
        }

        function fntablaChequesTerceros() {
            if ($.fn.dataTable.isDataTable('#TblChequesTerceros')) {
                table = $('#TblChequesTerceros').DataTable();
                table.destroy();
            }
            $('#TblChequesTerceros').DataTable({
                "language": { "url": "../Content/assets/plugins/datatables/es.txt" },
                "order": [[4, 'asc']],
                'paging': false,
                'lengthChange': false,
                'searching': true,
                'ordering': false,
                'info': false,
                'autoWidth': true,
                'scrollY': '230px',
                'scrollCollapse': true
            });

        }

        $(function () {

            $('#TblFacturas').DataTable({
                "language": { "url": "../Content/assets/plugins/datatables/es.txt" },
                "order": [[5, 'asc']],
                'paging': false,
                'lengthChange': false,
                'searching': true,
                'ordering': false,
                'info': false,
                'autoWidth': true,
                'scrollY': '230px',
                'scrollCollapse': true
            });

            $('.tabPropios').on('click', function (event) {
                event.preventDefault();
                fntablaChequesPropios();
            });

            $('.tabTerceros').on('click', function (event) {
                event.preventDefault();
                fntablaChequesTerceros();
            });

            $('#ModalCheques').on('shown.bs.modal', function () {
                fntablaChequesPropios();
            });

            var modal_lv = 0;
            $('.modal').on('shown.bs.modal', function (e) {
                $('.modal-backdrop:last').css('zIndex', 1051 + modal_lv);
                $(e.currentTarget).css('zIndex', 1052 + modal_lv);
                modal_lv++
            });

            $('.modal').on('hidden.bs.modal', function (e) {
                modal_lv--
            });

        });




    </script>



}
