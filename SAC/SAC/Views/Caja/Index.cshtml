@model SAC.Models.CajaModelView

@{
    ViewBag.Title = "Consulta e Ingresos de Caja";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 0.1em 1em;
    }

    .table td, .table th {
        padding: .25rem;
    }
</style>

<h2>Index</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    List<SelectListItem> ListaCodigoCaja = (List<SelectListItem>)ViewBag.Listapagina;

<div class="form-horizontal">
    <h4>CajaModelView</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



    <div class="table-responsive">

        <table id="example23" class="table stylish-table" borde="2">


            <thead>

               


                <tr>


                    <th class="sort-alpha">Concepto</th>
                    <th class="sort-numeric">Pesos</th>
                    <th>Dolares</th>
                    <th>Cheques</th>
                    <th>Tarjeta</th>
                    <th>Fecha</th>
                    <th>Grupo Caja</th>
                    <th>Acciones</th>


                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.ListaCaja)
                {
                    <tr>


                        <td>
                            @Html.DisplayFor(modelItem => item.Concepto)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ImportePesos)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ImporteDolar)




                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ImporteCheque)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ImporteTarjeta)
                        </td>

                        <td>


                            @Convert.ToDateTime(item.Fecha).ToString("dd/MM/yyyy")




                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.GrupoCaja.Codigo)
                        </td>



                        <td>
                            <a href="@Url.Action("AddOrEdit", "Caja",new { id = item.Id })" data-toggle="tooltip" data-original-title="Editar" class="btn btn-primary fa fa-1x fa-pencil-square-o"></a>


                            <span data-toggle="modal" data-target="#myModalEliminar" data-id="@Html.DisplayFor(modelItem =>item.Id)">
                                <a class="btn btn-danger fa fa-trash-o fa-1x" role='button' data-toggle="tooltip" data-placement="top" title="Eliminar">.</a>
                            </span>
                        </td>




                    </tr>





                }



            </tbody>

           

        </table>

    </div>


    <div class="row">
        <!-- Column -->
        <div class="col-lg-12">
            <div class="card">
                <h2 class="page-header">Registracion</h2>
                <div class="card-body">
                    <form action="#">
                        <div class="form-body">

                            <div class="row col-12">



                                <div class="col-9">


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Concepto, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.Concepto, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Concepto, "", new { @class = "text-danger" })

                                    </div>


                                </div>


                            </div>



                            <div class="row col-12">

                                <div class="col-3">

                                    <div class="form-group">

                                        @Html.LabelFor(m => m.Fecha, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Fecha, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Fecha, "", new { @class = "text-danger form-control-sm " })
                                    </div>


                                </div>


                                <div class="col-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImportePesos, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.ImportePesos, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ImportePesos, "", new { @class = "text-danger" })

                                    </div>

                                </div>

                                <div class="col-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImporteDolar, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.ImporteDolar, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ImporteDolar, "", new { @class = "text-danger" })

                                    </div>

                                </div>

                                <div class="col-3">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImporteDeposito, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.ImporteDeposito, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ImporteDeposito, "", new { @class = "text-danger" })

                                    </div>

                                </div>

                            </div>
                            <div class="row col-12">
                                <div class="col-6">
                                    <div class="form-group">

                                        <label for="readonly5">Grupo Caja</label>
                                        @Html.DropDownList("IdGrupoCaja", ListaCodigoCaja, null, new { @class = "form-control" })
                                        @Html.ValidationMessage("IdGrupoCaja", new { @class = "text-danger" })

                                    </div>
                                </div>


                                <div class="col-3">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImporteTarjeta, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.ImporteTarjeta, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ImporteTarjeta, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="col-3">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImporteCheque, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.ImporteCheque, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ImporteCheque, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>

                            <hr>



                            <div class="row col-12">
                                <p>
                                    <button type="submit" class="btn btn-success btn-sm"> <i class="fa fa-check"></i> Guardar</button>
                                    @Html.ActionLink("Cancelar", "Index", "Caja", htmlAttributes: new { @class = "btn btn-dark btn-sm" })
                                </p>
                            </div>




                        </div>



                    </form>
                </div>
            </div>
        </div>
        <!-- Column -->
    </div>


</div>




}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
